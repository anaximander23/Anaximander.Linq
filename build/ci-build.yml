trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  GitVersion.NuGetVersionV2: ''

steps:
- task: UseGitVersion@5
  inputs:
    versionSpec: '5.x.x'
    useConfigFile: true
    configFilePath: 'GitVersion.yml'
  displayName: 'Generate version number'



- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
  displayName: 'Install .NET 6.0 SDK'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.0.x'
  displayName: 'Install .NET 7.0 SDK'

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '6.x'
    checkLatest: true
  displayName: 'Use NuGet tool v6.x'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: |
      src/src/Anaximander.Linq/src/Anaximander.Linq.csproj
      src/Anaximander.Linq.Tests.*/Anaximander.Linq.Tests.*.csproj
    feedsToUse: 'select'
    noCache: true
    verbosityRestore: 'Normal'
  displayName: 'Restore NuGet packages'

- task: VSBuild@1
  inputs:
    solution: '**\*.sln'
    configuration: 'Release'
    clean: true
    msbuildArchitecture: 'x64'
  displayName: 'Build'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'src/Anaximander.Linq.Tests.*/Anaximander.Linq.Tests.*.csproj'
    arguments: '--nologo --no-build -c $(build-configuration)'
  displayName: 'Test'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: 'build\*.nuspec'
    packDestination: '$(Build.ArtifactStagingDirectory)\pkg'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersionV2'
    verbosityPack: 'Normal'
  displayName: 'Create NuGet package'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\pkg'
    ArtifactName: 'pkg'
    publishLocation: 'Container'
  displayName: 'Publish package artifact'