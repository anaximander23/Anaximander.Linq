trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  GitVersion.NuGetVersionV2: ''

steps:
- task: UseGitVersion@5
  inputs:
    versionSpec: '5.x.x'
    useConfigFile: true
    configFilePath: 'GitVersion.yml'
  displayName: 'Generate version number'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.x'
  displayName: 'Use .NET 5'

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.x'
    checkLatest: true
  displayName: 'Use NuGet tool v5.x'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: |
      src/**/*.csproj
      tests/**/*.csproj
    feedsToUse: 'select'
    noCache: true
    verbosityRestore: 'Normal'
  displayName: 'Restore NuGet packages'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: |
      src/**/*.csproj
      tests/**/*.csproj
    arguments: '--nologo --no-restore -c $(build-configuration)'
  displayName: 'Build'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'tests/**/Anaximander.**Tests.csproj'
    arguments: '--nologo --no-build -c $(build-configuration)'
  displayName: 'Test'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: 'build\*.nuspec'
    packDestination: '$(Build.ArtifactStagingDirectory)\pkg'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersionV2'
    verbosityPack: 'Normal'
  displayName: 'Create NuGet package'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\pkg'
    ArtifactName: 'pkg'
    publishLocation: 'Container'
  displayName: 'Publish package artifact'